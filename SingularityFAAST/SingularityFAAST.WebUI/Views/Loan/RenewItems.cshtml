@using SingularityFAAST.Core.DataTransferObjects
@model IEnumerable<SingularityFAAST.Core.DataTransferObjects.LoansClientsInventoryDTO>

@{
    ViewBag.Title = "RenewItems";
}

@*<head>
        <meta name="viewport" content="width=device-width" />
        <title>ManageLoans</title>
    </head>
*@

@*<div class="row">*@   @*add class (makes body content + column into a single row) here to create two-column page for upcoming due loans *@
@*This will be column for upcoming due loans, and past due loans*@

<h2>Loan Items</h2>
@*<div class="col-md-4 col-md-offset-4"></div>*@  @*This was to center the title*@

<br />
How to RenewItems, yet not make whole loan overdue (while having item that is for another 28 days), or affect monthly count of loans made?  When Item or Entire Loan is renewed, it should count as new loan for the month.
<div class="row">
    <div class="col-md-2">
        @Html.ActionLink("Renew Entire Loan", "AddLoan", null, new { @class = "btn btn-primary" })   Currently, this creates a new loan for the month.
    </div>
</div>
    <br />
    <div class="row">
        <div class="col-md-4">
            Select any item to renew, cancel or check in.
        </div>
        <div class="btn-group">
            @*<div class="col-md-2">*@

            @*</div>*@
            @*<div class="col-md-2">*@
            @Html.ActionLink("Renew Item", "RenewLoan", null, new { @class = "btn btn-default" }) @*RenewLoan*@
            @*</div>*@
            @*<div class="col-md-2">*@
            @Html.ActionLink("Remove Item", "CancelLn", null, new { @class = "btn btn-default" }) @*CancelLoan  *@
            @*</div>*@
            @*<div class="col-md-2">*@
            @Html.ActionLink("Edit Loan", "EditLn", null, new { @class = "btn btn-default" }) @*EditLoan  Pass the Loan number to auto-populate details on EditLn *@
            @*</div>*@
            @*<div class="col-md-2">*@
            @Html.ActionLink("Check-In Item", "CheckIn", null, new { @class = "btn btn-default" }) @*CheckinLoan*@ @*To record client outcome, damages etc.*@
            @*</div>*@
        </div>
    </div>
    <br />

    @*Information for Loan #@foreach (var each in Model) {@each.LoanNumber*@     @*Client: @each.LastName, @each.FirstName  Phone: @each.HomePhone  Email: @each.Email*@
    Information for Loan # Loan Number, Client Name, Phone, Email @*@Html.DisplayFor(model => model.LoanNumber)*@

    <br />
    <br />
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-9">
                <table class="table table-striped table-hover table-condensed">
                    <thead>
                        <tr>
                            <th>
                                Select
                            </th>
                            <th>
                                Item ID
                            </th>
                            <th>
                                Item Name
                            </th>
                            <th>
                                Manufacturer
                            </th>
                            <th>
                                Date Loaned
                            </th>
                            <th>
                                Date Due
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                    

                    </tbody>
                </table>
            </div>
        </div>
        <p>
            @Html.ActionLink("Edit", "EditLn", null, null)  @*new { id = Model.LoanId }) |*@

            @Html.ActionLink("Back to List", "Index", null, null)
        </p>
    </div>
